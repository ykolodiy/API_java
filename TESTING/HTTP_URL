package API_CALLS;
import java.io.BufferedReader;
//https://www.baeldung.com/java-http-request
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Iterator;
import java.util.List;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import com.google.gson.Gson;
import com.google.gson.JsonElement;

import jdk.nashorn.internal.parser.JSONParser;

public class HTTP_URL {

	public static void main(String[] args) throws IOException, JSONException {
		// for testing use this https://jsonplaceholder.typicode.com/

		URL url = new URL("https://jsonplaceholder.typicode.com/users");
		HttpURLConnection con = (HttpURLConnection) url.openConnection();
		con.setRequestMethod("GET");
		con.setRequestProperty("Content-Type", "application/json");
		con.setConnectTimeout(5000);
		con.setReadTimeout(5000);
		con.setInstanceFollowRedirects(false);
		
		System.out.println(getFullResponse(con));
		
		
		BufferedReader in = new BufferedReader(
				  new InputStreamReader(con.getInputStream()));
				String inputLine;
				StringBuffer content = new StringBuffer();
				while ((inputLine = in.readLine()) != null) {
				    content.append(inputLine);
				}
				in.close();
		System.out.println(content.toString());
		Gson gson = new Gson();
		String serializedjson = gson.toJson(content.toString());
		
		
		System.out.println(serializedjson);
		
		JSONArray myObject = new JSONArray(content.toString());
		JSONObject json =(JSONObject)myObject.get(0);
		System.out.println(json.toString());
		String e = json.getString("website");
		System.out.println(e);
		
		
		/*
		//response
		int status = con.getResponseCode();
		
		BufferedReader in = new BufferedReader(
				  new InputStreamReader(con.getInputStream()));
				String inputLine;
				StringBuffer content = new StringBuffer();
				while ((inputLine = in.readLine()) != null) {
				    content.append(inputLine);
				}
				in.close();
				
				
				// if fails
				Reader streamReader = null;
				 
				if (status > 299) {
				    streamReader = new InputStreamReader(con.getErrorStream());
				} else {
				    streamReader = new InputStreamReader(con.getInputStream());
				}
				
				System.out.println(content.toString());
				
				*/
	
		
		
	}
	
	    public static String getFullResponse(HttpURLConnection con) throws IOException {
	        StringBuilder fullResponseBuilder = new StringBuilder();
	 
	        // read status and message
	        fullResponseBuilder.append(con.getResponseCode())
	        .append(" ")
	        .append(con.getResponseMessage())
	        .append("\n");
	        
	        // read headers
	        con.getHeaderFields().entrySet().stream()
	        .filter(entry -> entry.getKey() != null)
	        .forEach(entry -> {
	            fullResponseBuilder.append(entry.getKey()).append(": ");
	            List headerValues = entry.getValue();
	            Iterator it = headerValues.iterator();
	            if (it.hasNext()) {
	                fullResponseBuilder.append(it.next());
	                while (it.hasNext()) {
	                    fullResponseBuilder.append(", ").append(it.next());
	                }
	            }
	            fullResponseBuilder.append("\n");
	      });
	        
	        
	        // read response content
	        return fullResponseBuilder.toString();
	        
	    

	    
	    }		
		
		
		
		
		
		
		
		
	

}
